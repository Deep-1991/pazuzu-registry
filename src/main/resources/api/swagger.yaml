swagger: '2.0'
info:
  title: Pazuzu registry
  description: Generating Dockerfiles by sets of required functions
  version: "0.0.3"
host: pazuzu.zalando.net
schemes:
  - http
produces:
  - application/json
paths:
  /api/features:
    get:
      summary: List all the features in pazuzu
      description: |
        Returns all the features without it's dependencies. Each features can further be accessed
        one by one and the dependencies will be there
      parameters:
        - name: name
          in: query
          description: value, that must present in feature name.
          required: false
          type: array
          items:
            type: string
        - name: sorted
          in: query
          description: flag to indicate if output should be sorted
          required: false
          type: integer
      tags:
        - Features
      responses:
        200:
          description: An array of features
          schema:
            type: array
            items:
              $ref: '#/definitions/Feature'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Creates a new feature
      description: |
        Creates a new feature with specified name, docker data, etc. Feature 
        name is checked to be unique.
      parameters:
        - name: feature
          required: true
          in: body
          schema:
            $ref: '#/definitions/FeatureToCreate'
      tags:
        - Features
      responses:
        201:
          description: Feature successfully created
          schema:
            $ref: '#/definitions/FeatureFull'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /api/features/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: Name of feature
        type: string
    get:
      summary: Get full feature elements
      description: |
        Returns all the feature information, including dependencies
      tags:
        - Features
      responses:
        200:
          description: Full feature representation
          schema:
            $ref: '#/definitions/FeatureFull'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Replace this feature's content
      description: |
        Replaces docker_data and dependencies for this feature. Recursion checking is performed on this step
      tags: 
        - Features
      parameters:
        - name: feature
          required: true
          in: body
          schema:
            $ref: '#/definitions/FeatureToCreate'
      responses:
        200:
          description: Full feature representation
          schema:
            $ref: "#/definitions/FeatureFull"
        default:
          description: Unexpected exception
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: Delete feature
      description: |
        Delete this feature. In case when another features has links to this feature - nothing will be deleted and
        error will be returned.
      tags:
        - Features
      responses:
        204:
          description: Feature successfully deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Feature:
    type: object
    properties:
      name:
        type: string
        description: Unique identifier representing a specific feature.
      docker_data:
        type: string
        description: Docker file part to be used with that feature.
      test_instruction:
        type: string
        description: how to test that feature is working
      description:
        type: string
        description: description of the feature
  FeatureToCreate:
    type: object
    properties:
      name:
        type: string
        description: Unique identifier representing a specific feature.
      docker_data:
        type: string
        description: Docker file part to be used with that feature.
      test_instruction:
        type: string
        description: how to test that feature is working
      description:
        type: string
        description: description of the feature
      dependencies:
        type: array
        items: 
          type: string
  FeatureFull:
    type: object
    properties:
      name:
        type: string
        description: Unique identifier representing a specific feature.
      docker_data:
        type: string
        description: Docker file part to be used with that feature.
      test_instruction:
        type: string
        description: how to test that feature is working
      description:
        type: string
        description: description of the feature
      dependencies:
        type: array
        items:
          $ref: '#/definitions/Feature'
        description: List of dependencies for this feature
  Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      detailed_message:
        type: string
