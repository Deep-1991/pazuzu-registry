swagger: '2.0'
info:
  title: Pazuzu api specification
  description: Pazuzu api specification - what need to be done to create pazuzu cli and ui.
  version: "0.0.2"
host: pazuzu.zalando.net
schemes:
  - http
produces:
  - application/json
paths:
  /api/features:
    get:
      summary: List all the features in pazuzu
      description: |
        Returns all the features without it's dependencies. Each features can further be accessed
        one by one and the dependencies will be there
      parameters:
        - name: name
          in: query
          description: Optional value, that must present in feature name.
          required: false
          type: string
      tags:
        - Features
      responses:
        200:
          description: An array of features
          schema:
            type: array
            items:
              $ref: '#/definitions/Feature'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Creates a new feature
      description: |
        Creates a new feature with specified name, docker data, etc. Feature 
        name is checked to be unique.
      parameters:
        - name: feature
          required: true
          in: body
          schema:
            $ref: '#/definitions/FeatureToCreate'
      tags:
        - Features
      responses:
        201:
          description: Feature successfully created
          schema:
            $ref: '#/definitions/FeatureFull'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /api/features/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: Name of feature
        type: string
    get:
      summary: Get full feature elements
      description: |
        Returns all the feature information, including dependencies
      tags:
        - Features
      responses:
        200:
          description: Full feature representation
          schema:
            $ref: '#/definitions/FeatureFull'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Replace this feature's content
      description: |
        Replaces docker_data and dependencies for this feature. Recursion checking is performed on this step
      tags: 
        - Features
      parameters:
        - name: feature
          required: true
          in: body
          schema:
            $ref: '#/definitions/FeatureToCreate'
      responses:
        200:
          description: Full feature representation
          schema:
            $ref: "#/definitions/FeatureFull"
        default:
          description: Unexpected exception
          schema:
            $ref: "#/definitions/Error"
    delete:
      summary: Delete feature
      description: |
        Delete this feature. Links from other features are not deleted, 
        so one need to handle it manually
      tags:
        - Features
      responses:
        204:
          description: Feature successfully deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /api/containers:
    get:
      summary: List of containers
      description: List all the containers present in the registry
      parameters:
        - name: name
          description: filter for container name (container name must contain this parameter)
          required: false
          type: string
          in: query
      tags: 
        - Containers
      responses:
        200:
          description: An array of containers
          schema:
            type: array
            items:
              $ref: '#/definitions/Container'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create new container 
      description: Creates new container with name and features
      parameters:
        - name: container
          required: true
          in: body
          schema:
            $ref: '#/definitions/ContainerToCreate'
          description: Container information
      tags:
        - Containers
      responses:
        201:
          description: Newly created container information
          schema:
            $ref: "#/definitions/ContainerFull"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /api/containers/{id}:
    parameters:
      - name: id
        required: true
        type: string
        in: path
        description: Container name
    get:
      tags:
        - Containers
      summary: Get container information
      description: Get container information
      responses:
        200:
          description: Container information
          schema:
            $ref: "#/definitions/ContainerFull"
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - Containers
      summary: Update container information
      description: Updates container information.
      parameters:
        - name: container
          required: true
          in: body
          schema:
            $ref: '#/definitions/ContainerToCreate'
          description: Container information
      responses:
        200:
          description: Container successfully updated
          schema:
            $ref: '#/definitions/ContainerFull'
        default:
          description: Unexpected error
          schema: 
            $ref: '#/definitions/Error'

    delete:
      tags:
        - Containers
      summary: Delete container
      description: Deletes container
      responses:
        204:
          description: Successfully deleted container
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/Error'
  /api/containers/{id}/features:
    parameters:
      - name: id
        required: true
        type: string
        in: path
        description: container name
    get:
      tags:
        - Containers
      summary: get features in container
      description: get fetures in container
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Feature'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Add feature to container
      tags:
        - Containers
      description: Add existing feature to container. Warning REST problem inside.
      parameters:
        - name: feature
          schema:
            $ref: '#/definitions/FeatureToAdd'
          in: body
          required: true
      responses:
        200:
          description: Feature was added to container
          schema:
            $ref: '#/definitions/ContainerFull'
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/Error'
  /api/container/{container_id}/features/{feature}:
    parameters:
      - name: container_id
        required: true
        type: string
        in: path
        description: container name
      - name: feature
        required: true
        type: string
        in: path
        description: feature name
    delete:
      summary: Delete feature from container 
      description: |
        Delete specified feature from container. Feature is not deleted by itself, instead only reference 
        to that feature is removed
      responses:
        204:
          description: Features successfully deleted from container
        default:
          description: Unexpected exception
          schema:
            $ref: '#/definitions/Error'
  /api/dockerfile:
    get:
      summary: Generates docker file
      description: Generates docker file using features from request
      tags:
        - Dockerfile
      parameters:
        - name: feature
          required: true
          in: query
          type: string
          description: |
            Feature to include in resulting docker file. To include several features just pass
            several parameters with this name
      responses:
        200:
          description: String with docker file
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /api/containers/{id}/dockerfile:
    parameters:
      - name: id
        in: path
        required: true
        type: string
        description: id of container to generate docker file for.
    get:
      summary: Generates docker file
      description: Generates docker file using stored container information
      tags:
        - Dockerfile
        - Containers
      responses:
        200:
          description: String with docker file
          schema:
            type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Feature:
    type: object
    properties:
      name:
        type: string
        description: Unique identifier representing a specific feature.
      docker_data:
        type: string
        description: Docker file part to be used with that feature.
  FeatureToCreate:
    type: object
    properties:
      name:
        type: string
        description: Unique identifier representing a specific feature.
      docker_data:
        type: string
        description: Docker file part to be used with that feature.
      dependencies:
        type: array
        items: 
          type: string
  FeatureToAdd:
    type: object
    properties:
      name:
        type: string
        description: Feature name
  FeatureFull:
    type: object
    properties:
      name:
        type: string
        description: Unique identifier representing a specific feature.
      docker_data:
        type: string
        description: Docker file part to be used with that feature.
      dependencies:
        type: array
        items:
          $ref: '#/definitions/Feature'
        description: List of dependencies for this feature
  Container:
    type: object
    properties:
      name: 
        type: string
        description: Name of container
  ContainerToCreate:
    type: object
    properties:
      name: 
        type: string
        description: Name of container
      features:
        type: array
        items:
          type: string
  ContainerFull:
    type: object
    properties:
      name: 
        type: string
        description: Name of container
      features:
        $ref: '#/definitions/Feature'
  Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
        
